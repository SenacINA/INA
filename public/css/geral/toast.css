body {
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: slategrey;
}


.toast-container {
    position: absolute;
    width: fit-content;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    right: 0;
    background-color: red;
}

/* From Uiverse.io by xerith_8140 */ 
/* Notification container */

.notification-container {
    /* Position top left */
  
    position: fixed;
    bottom: 16px;
    right: 16px;
    z-index: 1000;
    max-width: 80%;
  
    --content-color: black;
    --background-color: #f3f3f3;
    --font-size-content: 16px;
    --icon-size: 16px;
  
    max-width: 80%;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    list-style-type: none;
    font-family: Jost;
    color: var(--content-color);
  }
  
  /* Notification Item */
  
  .notification-item {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    gap: 1em;
    height: 40px;
    overflow: hidden;
    padding: 8px;
    border-radius: 5px;
    box-shadow: rgba(111, 111, 111, 0.2) 0px 8px 24px;
    background-color: var(--background-color);
    transition: all 250ms ease;
  
    /* Background Pattern */
  
    --grid-color: rgba(225, 225, 225, 0.7);
    background-size: 55px 55px;
  }
  
  .notification-item svg {
    transition: 250ms ease;
  }
  
  .notification-item:hover {
    transform: scale(1.01);
  }
  
  .notification-item:active {
    transform: scale(1.05);
  }
  
  .notification-item .notification-close:hover {
    background-color: rgba(204, 204, 204, 0.45);
  }
  
  .notification-item .notification-close:hover svg {
    color: rgb(0, 0, 0);
  }
  
  .notification-item .notification-close:active svg {
    transform: scale(1.1);
  }
  
  /* Notification Icons */
  
  .notification-item .notification-close {
    padding: 2px;
    border-radius: 5px;
    transition: all 250ms;
  }
  
  .notification-container svg {
    width: var(--icon-size);
    height: var(--icon-size);
    color: var(--content-color);
  }
  
  .notification-icon {
    display: flex;
    align-items: center;
  }
  
  /* Success */
  
  .success {
    color: #047857;
    background-color: #7dffbc;
    --grid-color: rgba(16, 185, 129, 0.25);
  }
  
  .success svg {
    color: #047857;
  }
  
  .success .notification-progress-bar {
    background-color: #047857;
  }
  
  .success:hover {
    background-color: #5bffaa;
  }
  
  /* Info */
  
  .info {
    color: #1e3a8a;
    background-color: #7eb8ff;
    --grid-color: rgba(59, 131, 246, 0.25);
  }
  
  .info svg {
    color: #1e3a8a;
  }
  
  .info .notification-progress-bar {
    background-color: #1e3a8a;
  }
  
  .info:hover {
    background-color: #5ba5ff;
  }
  
  /* Warning */
  
  .warning {
    color: #78350f;
    background-color: #ffe57e;
    --grid-color: rgba(245, 159, 11, 0.25);
  }
  
  .warning svg {
    color: #78350f;
  }
  
  .warning .notification-progress-bar {
    background-color: #78350f;
  }
  
  .warning:hover {
    background-color: #ffde59;
  }
  
  /* Error */
  
  .error {
    color: #7f1d1d;
    background-color: #ff7e7e;
    --grid-color: rgba(239, 68, 68, 0.25);
  }
  
  .error svg {
    color: #7f1d1d;
  }
  
  .error .notification-progress-bar {
    background-color: #7f1d1d;
  }
  
  .error:hover {
    background-color: #ff5f5f;
  }
  
  /* Notification content */
  
  .notification-content {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 0.5em;
  }
  
  .notification-text {
    font-size: var(--font-size-content);
    user-select: none;
  }
  
  .notification-close {
    cursor: pointer;
  }
  
  /* Notification progress bar */
  
  .notification-progress-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 1px;
    background: var(--content-color);
    width: 100%;
    transform: translateX(100%);
  
    /* Remove the infinite property for your website */
  
    animation: progressBar 5s linear forwards infinite;
  }
  
  /* progressBar Animation */
  
  @keyframes progressBar {
    0% {
      transform: translateX(0);
    }
  
    100% {
      transform: translateX(-100%);
    }
  }
  